@mixin for-size($size) {
  @if $size == mobile {
    @media (max-width: 767px) {
      @content;
    }
  } @else if $size == tablet {
    @media (min-width: 768px) {
      @content;
    }
  } @else if $size == desktop {
    @media (min-width: 1280px) {
      @content;
    }
  } @else if $size == desktop-xl {
    @media (min-width: 1600px) {
      @content;
    }
  }
}

@function rem($px) {
  @return ($px / 16) + rem;
}

@mixin flexible($justify: center) {
  display: flex;
  justify-content: $justify;
}

@mixin pseudo($width, $height, $content: '', $display: block) {
  content: $content;
  display: $display;
  width: $width;
  height: $height;
}

@mixin background-settings(
  $repeat: no-repeat,
  $position: center,
  $size: cover
) {
  background-repeat: $repeat;
  background-position: $position;
  background-size: $size;
}

$maxWidth: 1280;
@mixin adaptiv-font($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $maxWidth: $maxWidth - 320;
  font-size: calc(
    #{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth})
  );
}

// Адаптивное свойство
$maxWidth: 1920;
$maxWidhtContainer: 80%;

@mixin adaptive-value($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;
  @if $type==1 {
    //Только если меньше контейнера
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidhtContainer + px}) {
      #{$property}: calc(
        #{minSize + px} + #{$addSize} *
          ((100vw - 320px) / #{$maxWidhtContainer - 320})
      );
    }
  } @else if $type==2 {
    //Только если больше контейнера
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidhtContainer + px}) {
      #{$property}: calc(
        #{minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
      );
    }
  } @else {
    //Всегда
    #{$property}: calc(
      #{minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
    );
  }
} ;
